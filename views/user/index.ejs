<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Anjali Flower Works</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/gsap.min.js"></script>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      transition: all 0.3s ease;
    }
    .product-card {
      transition: all 0.3s ease;
      opacity: 0;
      transform: translateY(20px);
    }
    .product-card:hover {
      transform: translateY(-5px) rotate(2deg);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }
    .slide-in {
      opacity: 0;
      transform: translateY(20px);
    }
    .dark-mode {
      transition: all 0.3s ease;
    }
    .search-results.active {
      display: block;
    }
    .search-results {
      display: none;
    }
  </style>
</head>
<body class="bg-gray-50 font-['Poppins'] transition-colors duration-300 dark-mode:bg-gray-900 dark-mode:text-white">

<!-- Header with Search -->
<header class="bg-white shadow-sm fixed top-0 w-full z-50 transition-all duration-300 dark-mode:bg-gray-800" id="header">
  <div class="p-4 max-w-3xl mx-auto">
    <div class="flex items-center justify-between mb-3">
      <h1 class="text-xl font-bold text-teal-600">Anjali Flower Works</h1>
      <div class="flex gap-2">
        <button id="darkModeToggle" class="p-2 rounded-full hover:bg-gray-100 transition-colors dark-mode:hover:bg-gray-700">
          üåô
        </button>
        <button id="layoutToggle" class="p-2 rounded-full hover:bg-gray-100 transition-colors dark-mode:hover:bg-gray-700">
          üì±
        </button>
      </div>
    </div>
    <div class="search-container relative">
      <div class="relative">
        <input type="text" id="searchInput"
          placeholder="Search products..."
          class="w-full pl-10 pr-4 py-3 rounded-full border border-gray-200 focus:border-teal-500 focus:ring-1 focus:ring-teal-500 transition-all dark-mode:bg-gray-700 dark-mode:border-gray-600 dark-mode:focus:border-teal-500 dark-mode:focus:ring-teal-500">
        <span class="absolute left-3 top-3.5">üîç</span>
        <button id="clearSearch" class="absolute right-3 top-3 text-gray-400 hover:text-gray-600 hidden">‚úñ</button>
      </div>
      <div id="searchResults" class="search-results absolute w-full bg-white mt-2 rounded-xl shadow-lg z-50 border border-gray-100 dark-mode:bg-gray-800 dark-mode:border-gray-700">
        <div class="p-4">
          <div class="flex items-center justify-between border-b pb-2 mb-2 dark-mode:border-gray-700">
            <span class="font-medium">Search Results</span>
            <span id="resultCount" class="text-sm text-gray-500">0 items</span>
          </div>
          <div id="resultsList"></div>
        </div>
      </div>
    </div>
  </div>
</header>

<!-- Products Grid -->
<div class="mt-28 p-4 max-w-3xl mx-auto" id="productsContainer">
  <div class="flex items-center justify-between mb-3">
    <h2 class="text-lg font-semibold">Featured Products</h2>
    <div class="text-sm text-teal-600" id="productCount">4 products</div>
  </div>
  <div class="grid grid-cols-2 gap-4" id="productGrid">
    <div class="product-card bg-white p-4 rounded-xl shadow cursor-pointer dark-mode:bg-gray-800 dark-mode:text-white">
      <div class="flex justify-center mb-2">
        <img src="https://user-images.githubusercontent.com/2805249/64069899-8bdaa180-cc97-11e9-9b19-1a9e1a254c18.png" class="w-20 h-20 object-contain" alt="Rose">
      </div>
      <h3 class="font-semibold text-center">Red Rose Bouquet</h3>
      <p class="text-xs text-gray-500 text-center mb-2">Fresh Roses</p>
      <div class="flex justify-between items-center">
        <span class="text-teal-600 font-bold">$25.00</span>
        <button class="bg-teal-500 text-white px-3 py-1 rounded-full text-xs hover:bg-teal-600 transition">Buy</button>
      </div>
    </div>
    <div class="product-card bg-white p-4 rounded-xl shadow cursor-pointer dark-mode:bg-gray-800 dark-mode:text-white">
      <div class="flex justify-center mb-2">
        <img src="https://user-images.githubusercontent.com/2805249/64069900-8bdaa180-cc97-11e9-9b19-1a9e1a254c18.png" class="w-20 h-20 object-contain" alt="Tulip">
      </div>
      <h3 class="font-semibold text-center">Tulip Delight</h3>
      <p class="text-xs text-gray-500 text-center mb-2">Colorful Tulips</p>
      <div class="flex justify-between items-center">
        <span class="text-teal-600 font-bold">$18.00</span>
        <button class="bg-teal-500 text-white px-3 py-1 rounded-full text-xs hover:bg-teal-600 transition">Buy</button>
      </div>
    </div>
    <div class="product-card bg-white p-4 rounded-xl shadow cursor-pointer dark-mode:bg-gray-800 dark-mode:text-white">
      <div class="flex justify-center mb-2">
        <img src="https://user-images.githubusercontent.com/2805249/64069901-8bdaa180-cc97-11e9-9b19-1a9e1a254c18.png" class="w-20 h-20 object-contain" alt="Orchid">
      </div>
      <h3 class="font-semibold text-center">Orchid Elegance</h3>
      <p class="text-xs text-gray-500 text-center mb-2">Exotic Orchids</p>
      <div class="flex justify-between items-center">
        <span class="text-teal-600 font-bold">$32.00</span>
        <button class="bg-teal-500 text-white px-3 py-1 rounded-full text-xs hover:bg-teal-600 transition">Buy</button>
      </div>
    </div>
    <div class="product-card bg-white p-4 rounded-xl shadow cursor-pointer dark-mode:bg-gray-800 dark-mode:text-white">
      <div class="flex justify-center mb-2">
        <img src="https://user-images.githubusercontent.com/2805249/64069902-8bdaa180-cc97-11e9-9b19-1a9e1a254c18.png" class="w-20 h-20 object-contain" alt="Lily">
      </div>
      <h3 class="font-semibold text-center">Lily Love</h3>
      <p class="text-xs text-gray-500 text-center mb-2">White Lilies</p>
      <div class="flex justify-between items-center">
        <span class="text-teal-600 font-bold">$22.00</span>
        <button class="bg-teal-500 text-white px-3 py-1 rounded-full text-xs hover:bg-teal-600 transition">Buy</button>
      </div>
    </div>
  </div>
</div>

<!-- Bottom Nav -->
<div class="fixed bottom-0 w-full bg-white shadow-lg border-t z-20 dark-mode:bg-gray-800 dark-mode:border-gray-700">
  <div class="flex justify-around items-center p-3">
    <a href="/" class="flex flex-col items-center text-teal-500">
      <span class="text-xl">üè†</span>
      <span class="text-xs">Home</span>
    </a>
    <a href="/categories" class="flex flex-col items-center text-gray-500">
      <span class="text-xl">üìã</span>
      <span class="text-xs">Categories</span>
    </a>
    <a href="/favourites" class="flex flex-col items-center text-gray-500">
      <span class="text-xl">‚ù§Ô∏è</span>
      <span class="text-xs">Favorites</span>
    </a>
    <a href="/contact" class="flex flex-col items-center text-gray-500">
      <span class="text-xl">üìû</span>
      <span class="text-xs">Contact</span>
    </a>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Animation for elements
    gsap.to('.slide-in', {
      opacity: 1,
      y: 0,
      stagger: 0.1,
      ease: 'power2.out',
      duration: 0.6
    });
    gsap.to('.product-card', {
      opacity: 1,
      y: 0,
      stagger: 0.05,
      ease: 'power2.out',
      duration: 0.6
    });

    // Dark mode toggle
    const darkModeToggle = document.getElementById('darkModeToggle');
    darkModeToggle.addEventListener('click', function() {
      document.body.classList.toggle('dark-mode');
      if (document.body.classList.contains('dark-mode')) {
        this.textContent = '‚òÄÔ∏è';
      } else {
        this.textContent = 'üåô';
      }
    });

    // Layout toggle (grid/list)
    let isGridView = true;
    const layoutToggle = document.getElementById('layoutToggle');
    const productGrid = document.getElementById('productGrid');
    layoutToggle.addEventListener('click', function() {
      isGridView = !isGridView;
      if (isGridView) {
        productGrid.classList.remove('grid-cols-1');
        productGrid.classList.add('grid-cols-2');
        this.textContent = 'üì±';
      } else {
        productGrid.classList.remove('grid-cols-2');
        productGrid.classList.add('grid-cols-1');
        this.textContent = 'üìã';
      }
    });

    // Search functionality (demo, filters by product name)
    const searchInput = document.getElementById('searchInput');
    const searchResults = document.getElementById('searchResults');
    const clearSearch = document.getElementById('clearSearch');
    const resultsList = document.getElementById('resultsList');
    const resultCount = document.getElementById('resultCount');
    const productCards = Array.from(document.querySelectorAll('.product-card'));

    searchInput.addEventListener('input', function() {
      const query = this.value.toLowerCase();
      if (query.length > 0) {
        clearSearch.classList.remove('hidden');
        const results = productCards.filter(card =>
          card.textContent.toLowerCase().includes(query)
        );
        resultCount.textContent = `${results.length} items`;
        resultsList.innerHTML = '';
        if (results.length === 0) {
          resultsList.innerHTML = `
            <div class="text-center py-4 text-gray-500">
              <p>No products found</p>
            </div>
          `;
        } else {
          results.forEach(card => {
            const resultItem = document.createElement('div');
            resultItem.className = 'flex items-center p-2 hover:bg-gray-50 rounded cursor-pointer mb-1 dark-mode:hover:bg-gray-700';
            resultItem.innerHTML = `
              <div class="w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center mr-3 dark-mode:bg-gray-700">
                <span>${card.querySelector('h3').textContent.charAt(0)}</span>
              </div>
              <div>
                <h4 class="font-medium">${card.querySelector('h3').textContent}</h4>
              </div>
            `;
            resultItem.addEventListener('click', () => {
              card.scrollIntoView({ behavior: 'smooth', block: 'center' });
              searchResults.classList.remove('active');
              searchInput.value = '';
              clearSearch.classList.add('hidden');
            });
            resultsList.appendChild(resultItem);
          });
        }
        searchResults.classList.add('active');
      } else {
        clearSearch.classList.add('hidden');
        searchResults.classList.remove('active');
      }
    });

    clearSearch.addEventListener('click', function() {
      searchInput.value = '';
      searchResults.classList.remove('active');
      this.classList.add('hidden');
      searchInput.focus();
    });

    document.addEventListener('click', function(event) {
      if (!searchInput.contains(event.target) && !searchResults.contains(event.target)) {
        searchResults.classList.remove('active');
      }
    });

    // Header scroll animation
    const header = document.getElementById('header');
    let lastScroll = 0;
    window.addEventListener('scroll', () => {
      const currentScroll = window.pageYOffset;
      if (currentScroll > lastScroll && currentScroll > 100) {
        header.style.transform = 'translateY(-100%)';
      } else {
        header.style.transform = 'translateY(0)';
      }
      lastScroll = currentScroll;
    });
  });
</script>
</body>
</html>
